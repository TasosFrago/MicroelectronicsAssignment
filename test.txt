diff --git a/58633.org b/58633.org
index 5f41742..c30a2f2 100644
--- a/58633.org
+++ b/58633.org
@@ -1,3 +1,28 @@
+#+title: Εργασία πρώτου εργαστηρίου Μικροηλεκτρονικής
+#+author: Αναστάσιος Φραγκόπουλος 58633
 
-#+BEGIN_SRC csv :file test.csv :colnames yes :delimiter ","
-#+END_SRC
+
+| ΤΑΣΗ (V) | ΡΕΥΜΑ (mA) | ΤΑΣΗ (V) | ΡΕΥΜΑ (mA) |
+|----------+------------+----------+------------|
+|    0.315 |       0.01 |    0.034 |       0.01 |
+|    0.345 |       0.02 |    0.054 |       0.02 |
+|    0.375 |       0.03 |    0.074 |       0.03 |
+|    0.405 |       0.05 |    0.094 |       0.06 |
+|    0.435 |       0.09 |    0.114 |       0.09 |
+|    0.465 |       0.17 |    0.134 |       0.14 |
+|    0.495 |       0.29 |    0.154 |       0.21 |
+|    0.525 |       0.52 |    0.174 |       0.64 |
+|    0.555 |       0.92 |    0.194 |       0.92 |
+|    0.585 |       1.67 |    0.214 |        1.3 |
+|    0.615 |       3.02 |    0.234 |       1.74 |
+|    0.645 |       5.69 |    0.254 |        2.2 |
+|    0.675 |      10.93 |    0.274 |       2.68 |
+|    0.705 |      21.76 |    0.294 |        3.2 |
+|    0.735 |      44.81 |    0.314 |       3.72 |
+|    0.739 |      50.54 |    0.334 |       4.25 |
+|        - |          - |    0.354 |       6.76 |
+|        - |          - |    0.374 |       7.29 |
+|        - |          - |    0.394 |       7.77 |
+|        - |          - |    0.414 |       8.51 |
+|        - |          - |    0.434 |       8.92 |
+|        - |          - |    0.454 |      10.22 |
diff --git a/lab1.py b/lab1.py
index 1f0b342..4163281 100644
--- a/lab1.py
+++ b/lab1.py
@@ -1,3 +1,4 @@
+import os
 import numpy as np
 import matplotlib.pyplot as plt
 from numpy import log as ln
@@ -5,16 +6,26 @@ from math import e
 import csv
 
 
-DEBUG=True
-# DEBUG=False
+PLOT=True
+PLOT=False
+
+SAVE=True
+SAVE=False
 
 def addToCSV(*columns: list[float], filename: str) -> None:
+    maxColLen: int = 0
+    for column in columns:
+        if len(column) > maxColLen:
+            maxColLen = len(column)
+
     header: list[str] = ["ΤΑΣΗ (V)", "ΡΕΥΜΑ (mA)", "ΤΑΣΗ (V)", "ΡΕΥΜΑ (mA)"]
-    table: list[list[float]] = [[0 for i in range(4)] for j in range(16)]
-    print(table)
-    for i in range(16):
+    table: list[list[float]] = [[0 for i in range(4)] for j in range(maxColLen)]
+    for i in range(maxColLen):
         for j in range(4):
-            table[i][j] = columns[j][i]
+            try:
+                table[i][j] = columns[j][i]
+            except IndexError:
+                continue
 
     with open(filename, "w") as fh:
         write = csv.writer(fh)
@@ -22,21 +33,11 @@ def addToCSV(*columns: list[float], filename: str) -> None:
         write.writerow(header)
         write.writerows(table)
 
-# Voltages
-volts: list[float] = [round((0.315 + (0.03)*i), 3) for i in range(15)]; volts.append(0.739)
-volts2: list[float] = [round((0.034 + (0.02)*i), 3) for i in range(22)]
-
-# Curents
-iDiode: list[float] = [0.01, 0.02, 0.03, 0.05, 0.09, 0.17, 0.29, 0.52, 0.92, 1.67, 3.02, 5.69, 10.93, 21.76, 44.81, 50.54]
-iDiode2: list[float] = [0.01, 0.02, 0.03, 0.06, 0.09, 0.14, 0.21, 0.64, 0.92, 1.30, 1.74, 2.20, 2.68, 3.20, 3.72, 4.25, 6.76, 7.29, 7.77, 8.51, 8.92, 10.22]
-
-# addToCSV(volts, iDiode, volts, iDiode, filename="test.csv")
-
-# Convert Curents to Amps
-iDiode = [(iDiode[i] * (10**-3)) for i in range(len(iDiode))]
-iDiode2 = [(iDiode2[i] * (10**-3)) for i in range(len(iDiode2))]
-
 def diode(pVolts: list[float], current: list[float], diodeName: str, num: int) -> None:
+    dir = os.path.join(os.getcwd(), "graphs")
+    if not os.path.exists(dir):
+        os.mkdir(dir)
+    filename = diodeName.replace(" ", "")
 
     # I - V Graph
     plt.figure(1)
@@ -44,6 +45,8 @@ def diode(pVolts: list[float], current: list[float], diodeName: str, num: int) -
     plt.title(f"{diodeName}\n Χαρακτηριστική I - V")
     plt.xlabel("V(V)", fontsize=16)
     plt.ylabel("I(A)", fontsize=16)
+    if SAVE:
+        plt.savefig(f"{dir}/{filename}_I_V.png")
 
     lnI: list[float] = [ln(i) for i in current]
 
@@ -53,24 +56,24 @@ def diode(pVolts: list[float], current: list[float], diodeName: str, num: int) -
         min = [0.507, -7.88] # x, y
         max = [0.618, -5.74] # x, y
     else:
+        # WRONG
         # min = [0.0947, -9.737] # x, y
         # max = [0.1552, -8.476] # x, y
 
-        min = [0.1552, -8.476] # x, y
-        max = [0.174, -7.363] # x, y
+        min = [0.15, -8.5] # x, y
+        max = [0.175, -7.343] # x, y
 
     trendX = [i for i in pVolts if(i > min[0] and i < max[0])]
     trendY = [i for i in lnI if(i > min[1] and i < max[1])]
-    print(len(trendX))
-    print(len(trendY))
 
     m, lnIs = np.polyfit(trendX, trendY, 1)
 
     # Find n 1.9644096969748301 diode 1
     n: float = 1/(m * 0.026)
+    Is: float = e**lnIs
     print(f"{n=}")
 
-    print(f"Is={e**lnIs}")
+    print(f"{Is=}")
 
 
     # LnI - V Graph
@@ -78,12 +81,36 @@ def diode(pVolts: list[float], current: list[float], diodeName: str, num: int) -
     plt.plot(pVolts, lnI, "x-")
     # TrendLine
     plt.plot(pVolts, (m*(np.array(pVolts)) + lnIs))
+    textLoc: list[float] = [0.557, -8.68]
+    if num != 1:
+        plt.ylim(-12, -4)
+        textLoc = [0.2439, -8.84]
+
     plt.title(f"{diodeName}\n Ln I - V")
+    plt.text(textLoc[0], textLoc[1], f"n = {n:.2f}\nIs = {np.format_float_scientific(np.float32(Is))} A", fontsize=14)
     plt.xlabel("V(V)", fontsize=16)
     plt.ylabel("ln I(A)", fontsize=16)
 
-    if DEBUG:
+    if SAVE:
+        plt.savefig(f"{dir}/{filename}_lnI_V.png")
+
+    if PLOT:
         plt.show()
 
-# diode(volts, iDiode, "diode1", num=1)
-diode(volts2, iDiode2, "diode 2", num=2)
+if __name__=="__main__":
+    # Voltages
+    volts: list[float] = [round((0.315 + (0.03)*i), 3) for i in range(15)]; volts.append(0.739)
+    volts2: list[float] = [round((0.034 + (0.02)*i), 3) for i in range(22)]
+
+    # Curents
+    iDiode: list[float] = [0.01, 0.02, 0.03, 0.05, 0.09, 0.17, 0.29, 0.52, 0.92, 1.67, 3.02, 5.69, 10.93, 21.76, 44.81, 50.54]
+    iDiode2: list[float] = [0.01, 0.02, 0.03, 0.06, 0.09, 0.14, 0.21, 0.64, 0.92, 1.30, 1.74, 2.20, 2.68, 3.20, 3.72, 4.25, 6.76, 7.29, 7.77, 8.51, 8.92, 10.22]
+
+    addToCSV(volts, iDiode, volts2, iDiode2, filename="table.csv")
+
+    # Convert Curents to Amps
+    iDiode = [(iDiode[i] * (10**-3)) for i in range(len(iDiode))]
+    iDiode2 = [(iDiode2[i] * (10**-3)) for i in range(len(iDiode2))]
+
+    diode(volts, iDiode, "Δίοδος Ι", num=1)
+    diode(volts2, iDiode2, "Δίοδος ΙΙ", num=2)
diff --git a/matScien.py b/matScien.py
deleted file mode 100644
index 5af18f7..0000000
--- a/matScien.py
+++ /dev/null
@@ -1,164 +0,0 @@
-from openpyxl import Workbook
-from docx import Document
-from numpy import log
-from math import e
-import matplotlib.pyplot as plt
-import numpy as np
-import itertools
-
-# Temps
-temps = [30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90]
-temps = [(i + 273.15) for i in temps]
-invTemps = [1/i for i in temps]
-
-# Volts
-voltsH = [7.95, 7.65, 6.7, 5.7, 5.0, 4.4, 3.8, 3.1, 2.7, 2.2, 1.8, 1.5, 1.26]
-
-voltsC = [7.6, 7.06, 6.01, 4.98, 4.24, 3.47, 2.95, 2.43, 2.02, 1.72, 1.46, 1.24, 1.08]
-
-s = lambda V : (32 * (10**-3))/ V
-
-# Conductivity
-condH = [s(i) for i in voltsH]
-condC = [s(i) for i in voltsC]
-
-r = lambda V : V / (16 * (10**-3))
-resH = [r(i) for i in voltsH]
-resC = [r(i) for i in voltsC]
-
-lcH = [log(i) for i in condH]
-lcC = [log(i) for i in condC]
-
-def cal():
-    k = 8.625 * (10**-5)
-
-    x = np.array(invTemps)
-    y1 = np.array(lcH)
-    y2 = np.array(lcC)
-    m1, b1 = np.polyfit(x, y1, 1)
-    print(m1)
-    m2, b2 = np.polyfit(x, y2, 1)
-    print(m2)
-    mo = (y1[-1]-y1[0])/(x[-1]-x[0])
-    print(mo)
-    lncon1 = m1*x + b1
-    lncon2 = m2*x + b2
-    lncon1 = lncon1.tolist()
-    lncon2 = lncon2.tolist()
-    plt.plot(x, y1, color="orange")
-    plt.plot(x, lncon1, color="orange", linestyle="dashed")
-    plt.plot(x, y2, color="blue")
-    plt.plot(x, lncon2, color="blue", linestyle="dashed")
-
-    plt.xlabel("1/T", fontsize=16)
-    plt.ylabel("ln(σ)", fontsize=16)
-    plt.legend(['κατα θερμανση', 'προσαρμοσμενη θεωρητικη ευθεια', 'κατα ψυξη', 'προσαρμοσμενη θεωρητικη ευθεια'], loc="lower right")
-    plt.show()
-    plt.savefig("fig.png")
-
-    for (a, b) in itertools.zip_longest(invTemps, lncon1):
-        Eg1 = -2*k*m1
-        print(Eg1)
-    print("st")
-    for (a, b) in itertools.zip_longest(invTemps, lncon2):
-        Eg2 = -2*k*m2
-        print(Eg2)
-
-def plot() -> None:
-    li = [i*-1 for i in lcH]
-    x = np.array(invTemps)
-    y1 = np.array(li)
-    y2 = np.array(lcC)
-    m, b = np.polyfit(x, y1, 1)
-    liny = m*x +b
-    plt.plot(x, y1)
-    plt.plot(x, liny)
-    plt.show()
-    return liny
-
-def word() -> None:
-    document = Document()
-    table1 = document.add_table(rows=1, cols=5, style='Normal Table')
-    row1 = table1.rows[0].cells
-    row1[0].text = "Θερμοκρασια δειγματος, Τ, Κ"
-    row1[1].text = "1/T, 1/K"
-    row1[2].text = "Τάση δειγματος κατα θερμανση, U, Volt"
-    row1[3].text = "Αντίσταση κατα θερμανση, R, Ω"
-    row1[4].text = "Αγωγιμότητα κατα θερμανση, σ, S/m"
-
-    for (a, b, c, d, e) in itertools.zip_longest(temps, invTemps, voltsH, resH, condH):
-        row1 = table1.add_row().cells
-        row1[0].text = str(a)
-        row1[1].text = str(b)
-        row1[2].text = str(c)
-        row1[3].text = str(d)
-        row1[4].text = str(e)
-        print(a, b, c, d, e)
-
-    document.add_paragraph('adding space')
-
-    table2 = document.add_table(rows=1, cols=5, style='Normal Table')
-    row2 = table2.rows[0].cells
-    row2[0].text = "Θερμοκρασια δειγματος, Τ, Κ"
-    row2[1].text = "1/T, 1/K"
-    row2[2].text = "Τάση δειγματος κατα ψυξη, U, Volt"
-    row2[3].text = "Αντίσταση κατα ψυξη, R, Ω"
-    row2[4].text = "Αγωγιμότητα κατα ψυξη, σ, S/m"
-
-    for (a, b, c, d, e) in itertools.zip_longest(temps, invTemps, voltsC, resC, condC):
-        row2 = table2.add_row().cells
-        row2[0].text = str(a)
-        row2[1].text = str(b)
-        row2[2].text = str(c)
-        row2[3].text = str(d)
-        row2[4].text = str(e)
-        print(a, b, c, d, e)
-
-    document.save("test.docx")
-
-
-
-def sheets(x: list, y1: list, y2: list) -> None:
-    excel = "test.xlsx"
-
-    workbook = Workbook()
-    sheet = workbook.active
-
-    sheet["A1"] = "1/Θερμοκρασια"
-    sheet["B1"] = "Αγωγιμοτητα κατα Θερμανση"
-    sheet["C1"] = "Αγωγιμοτητα κατα Ψυξη"
-
-    for i, item in enumerate(x):
-        A = "A" + str(i + 2)
-        sheet[A] = item
-
-    for i, item in enumerate(y1):
-        B = "B" + str(i + 2)
-        sheet[B] = item
-
-    for i, item in enumerate(y2):
-        C = "C" + str(i + 2)
-        sheet[C] = item
-
-    workbook.save(filename=excel)
-
-if __name__=='__main__':
-    # word()
-    # sheets(invTemps, condH, condC)
-    # plot()
-    # k = 8.625 * (10**-5)
-    # lin = plot()
-    # lin = lin.tolist()
-    # print(lin)
-    # print(type(lin))
-    # b = (lin[-1] - lin[0])/(invTemps[-1] - invTemps[0])
-    # print(b)
-    # for (a, b) in itertools.zip_longest(invTemps, lin):
-    #     Eg = 2*k*b
-    #     print(Eg)
-    # Eg = -2*k*(log(condH[0]) / invTemps[0])
-    # print(Eg)
-    # Eg = 2*k*b
-    # print(Eg)
-    # sheets(invTemps, lcH, lcC)
-    cal()
diff --git a/test.csv b/test.csv
deleted file mode 100644
index 085f3b7..0000000
--- a/test.csv
+++ /dev/null
@@ -1,17 +0,0 @@
-ΤΑΣΗ (V),ΡΕΥΜΑ (mA),ΤΑΣΗ (V),ΡΕΥΜΑ (mA)
-0.315,0.01,0.315,0.01
-0.345,0.02,0.345,0.02
-0.375,0.03,0.375,0.03
-0.405,0.05,0.405,0.05
-0.435,0.09,0.435,0.09
-0.465,0.17,0.465,0.17
-0.495,0.29,0.495,0.29
-0.525,0.52,0.525,0.52
-0.555,0.92,0.555,0.92
-0.585,1.67,0.585,1.67
-0.615,3.02,0.615,3.02
-0.645,5.69,0.645,5.69
-0.675,10.93,0.675,10.93
-0.705,21.76,0.705,21.76
-0.735,44.81,0.735,44.81
-0.739,50.54,0.739,50.54
